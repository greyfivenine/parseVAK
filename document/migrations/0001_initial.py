# Generated by Django 3.0.1 on 2019-12-22 08:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Council',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('council_code', models.CharField(max_length=20, verbose_name='Код совета')),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_name', models.CharField(max_length=8, verbose_name='Наименование степени')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_date', models.DateTimeField(verbose_name='Дата публикации документа')),
                ('document_name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование документа')),
                ('document_number', models.CharField(db_index=True, max_length=10, verbose_name='Номер документа')),
                ('document_link', models.CharField(max_length=100, verbose_name='Ссылка на документ')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=51)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=40, verbose_name='Отчество')),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(max_length=9, verbose_name='Наименование звания')),
            ],
        ),
        migrations.CreateModel(
            name='Science',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('science_name', models.CharField(max_length=50, verbose_name='Наименование науки')),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality_name', models.CharField(max_length=50, verbose_name='Наименование специальности')),
                ('speciality_code', models.CharField(max_length=8, verbose_name='Код специальности')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=120, verbose_name='Наименование университета')),
                ('university_preamble', models.CharField(max_length=10, verbose_name='Преамбула')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_number', models.CharField(max_length=30)),
                ('registration_date', models.CharField(max_length=8)),
                ('defence_date', models.CharField(blank=True, max_length=30, null=True)),
                ('council', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.Council', verbose_name='Код совета')),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.Degree', verbose_name='Степень')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Document', verbose_name='Номер документа')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.Person', verbose_name='ФИО')),
                ('rank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.Rank', verbose_name='Звание')),
                ('science', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.Science', verbose_name='Наименование науки')),
                ('speciality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.Speciality', verbose_name='Специальность')),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.University', verbose_name='ВУЗ')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document.DocumentType', verbose_name='Тип документа'),
        ),
        migrations.AddField(
            model_name='council',
            name='specialities',
            field=models.ManyToManyField(related_name='councils', to='document.Speciality', verbose_name='Сфера совета'),
        ),
        migrations.AddField(
            model_name='council',
            name='universities',
            field=models.ManyToManyField(related_name='universities', to='document.University', verbose_name='Состав совета'),
        ),
    ]
